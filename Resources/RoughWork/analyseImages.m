%% This will analyse both images from matlab processed and fpga processed
close all; clear all;
%% Open matlab image after downsampling
matlabImage = rgb2gray(imread('image.jpg'));
[h,w] = size(matlabImage);
matlabImage = im2double(matlabImage);
%% Gaussian Filter
GaussianFilter = zeros(h,w);
for i = 2:h-1
    for j = 2:w-1 % {[1,2,1],[2,4,2],[1,2,1]}/16 Gaussian Kernal
        sum = 0;
        sum = sum + matlabImage(i-1,j-1) + matlabImage(i-1,j)*2;
        sum = sum + matlabImage(i-1,j+1) + matlabImage(i,j-1)*2;
        sum = sum + matlabImage(i,j)*4 + matlabImage(i,j+1)*2;
        sum = sum + matlabImage(i+1,j-1) + matlabImage(i+1,j)*2;
        sum = sum + matlabImage(i+1,j+1);
        GaussianFilter(i,j) = sum/16;
    end
end
%% Downsample image with Matlab
DownsampledImageMatlab = zeros(128,128);
for m = 1:2:255
    for n = 1:2:255
        pix = 0;
        pix = (GaussianFilter(m,n) + GaussianFilter(m,n+1) + GaussianFilter(m+1,n) + GaussianFilter(m+1,n+1)) / 4;
        DownsampledImageMatlab((m+1)/2,(n+1)/2) = pix;
    end
end
modifiedImage = mat2gray(DownsampledImageMatlab(2:127, 2:127));
figure;
imshow(modifiedImage);

%% Creates output image from the hex file generated by FPGA
%% Open the hex file
hexFile = fopen('Image.hex', 'r');
%% Read the hex file to an image and close it
img = fscanf(hexFile, '%x', [1 inf]);
fclose(hexFile); 
%% Reshape the image to a 256 x 256 image and display
outImg = reshape(img,[256 256]);
outImg = imrotate(outImg, 90);
% figure, imshow(outImg,[]);
%% Extract the final output and save it
finalRender = mat2gray(outImg(130:255, 1:126));
imwrite((finalRender), 'finalImage.jpg');
figure, imshow(finalRender,[]);
%% %%%%%%%%%%%%%%%%%%%%% ANALYSE %%%%%%%%%%%%%%%%%%%% %%
Difference = abs(finalRender - modifiedImage).^2;
SUM = 0;
for ii = 1:1:126
    for jj = 1:1:126
        SUM = SUM + (Difference(ii, jj));
    end
end
%% Display Result
disp(sprintf('Mean Square Error is %f', SUM));